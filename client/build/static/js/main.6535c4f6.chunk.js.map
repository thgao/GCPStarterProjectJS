{"version":3,"sources":["../node_modules/@opentelemetry/exporter-collector/node_modules/@opentelemetry/core/build/src/trace/instrumentation sync","../node_modules/@opentelemetry/tracing/node_modules/@opentelemetry/core/build/src/trace/instrumentation sync","../node_modules/@opentelemetry/plugin-document-load/node_modules/@opentelemetry/core/build/src/trace/instrumentation sync","../node_modules/@opentelemetry/web/node_modules/@opentelemetry/core/build/src/trace/instrumentation sync","../node_modules/@opentelemetry/plugin-xml-http-request/node_modules/@opentelemetry/core/build/src/trace/instrumentation sync","Home.js","FoodFinder.js","index.js","web-tracer.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Home","to","tracer","require","gcpBase","FoodFinder","props","state","results","isLoading","ingredient","this","setState","getData","console","log","getCurrentSpan","span","startSpan","setAttribute","fetch","then","res","withSpan","parent","end","json","data","numSent","urlStr","ajax","headers","method","url","subscribe","val","resp","response","err","Object","length","list","entries","map","i","key","value","price","stock","Row","Col","lg","Button","onClick","buttonHandler","md","renderResults","Component","ReactDOM","render","exact","path","component","document","getElementById","CollectorExporter","SimpleSpanProcessor","DocumentLoad","WebTracerProvider","BatchSpanProcessor","XMLHttpRequestPlugin","ZoneScopeManager","opentelemetry","serviceName","webTracer","plugins","exporter","addSpanProcessor","webTracerWithZone","scopeManager","ignoreUrls","trace","setGlobalTracerProvider","getTracer"],"mappings":"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","file":"static/js/main.6535c4f6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 156;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 192;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 234;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 263;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 294;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>\n                Welcome to FoodFinder!\n            </h1>\n            <Link to='/find'><button>Enter</button></Link>\n        </div>\n    )\n\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Button, Row, Col } from 'reactstrap';\nimport { ajax } from 'rxjs/ajax';\nconst tracer = require('./web-tracer')('example-frontend');\nconst opentelemetry = require('@opentelemetry/api');\n\nconst gcpBase = 'https://healthy-earth-276916.ue.r.appspot.com';\nconst localBase = 'http://penguin.termina.linux.test:8080';\n\nclass FoodFinder extends Component {\n    constructor(props){\n        super()\n        this.tracer = props.tracer;\n        this.state = {\n            results: null,\n            isLoading: false\n        }\n    }\n\n    buttonHandler(ingredient) {\n        this.setState({isLoading: true})\n        this.getData(ingredient);\n\n    \n        console.log(tracer);\n        console.log(tracer.getCurrentSpan());\n        const span = tracer.startSpan(\"fe /find-server/:ingredient\");\n        span.setAttribute('ingredient', 'value');\n        fetch(gcpBase + '/find-server/' + ingredient)\n            .then(res => {\n                this.tracer.withSpan(span, () => {\n                    const child = tracer.startSpan(\"child\", { parent: tracer.getCurrentSpan() });\n                    child.end();\n                });\n                // alert(res);\n                let json = res.json()\n                // alert(json);\n                span.end();\n                return json\n            }).then(data => {\n                // alert(\"then?\")\n                this.setState(\n                    {results: data, \n                    ingredient: ingredient,\n                    isLoading: false}\n                );\n            })\n    }\n\n    getData(ingredient) { //dummy xml http request so that we can see examples of xml traces\n     this.numSent += 1;\n     const urlStr = gcpBase + '/find-server/' + ingredient;\n     const obs = ajax({\n       headers: {\n         'Content-Type': 'application/json',\n       },\n       method: 'GET',\n       url: urlStr,\n     });\n     obs.subscribe(\n       (val) => {\n         const resp = val.response;\n         console.log(resp)\n       },\n       (err) => {\n         console.log(\"err\")\n       },\n     );\n    }\n\n    renderResults(){\n        if(this.state.isLoading){\n            return <div> Loading vendors...</div>;\n        }\n        if(this.state.results == null){ \n            return;\n        }\n        if(Object.keys(this.state.results).length === 0){\n            return <div>No vendors have {this.state.ingredient} in stock.</div>\n        }\n        let list = Object.entries(this.state.results).map(([key, value], i) => {\n            return (\n                <div>\n                    {key}: ${value.price}, Inventory of {value.stock}\n                </div>\n            )\n        });\n        return (\n            <div>\n                Vendors for: {this.state.ingredient}\n                <div>\n                    {list}\n                </div>\n            </div>\n        )\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Food Finder</h1>\n                <Row>\n                    <Col lg=\"3\">\n                        <Button onClick={() => this.buttonHandler('apple')}>\n                            Find Apples\n                        </Button>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.buttonHandler('peach')}>\n                            Find Peaches\n                        </Button>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.buttonHandler('pear')}>\n                            Find Pears\n                        </Button>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.buttonHandler('flour')}>\n                            Find Flour\n                        </Button>\n                    </Col>\n                </Row>\n                <h2>Vendor Options:</h2>\n                <div id=\"results\">\n                    {this.renderResults()}\n                </div>\n            </div>\n        )\n    }\n\n}\n        \nexport default FoodFinder;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport FoodFinder from './FoodFinder';\nconst tracer = require('./web-tracer')('example-frontend');\n\nReactDOM.render(\n\t<Router>\n\t  <main>\n\t\t  <Route exact path='/' component={Home}/>\n\t\t  <Route exact path='/find' render={(props) => <FoodFinder {...props} tracer={tracer} />}/>\n\t  </main>\n\t</Router>\n,document.getElementById('root'));\n","const {CollectorExporter} = require('@opentelemetry/exporter-collector');\nconst {SimpleSpanProcessor} = require( '@opentelemetry/tracing');\nconst {DocumentLoad} = require('@opentelemetry/plugin-document-load');\nconst {WebTracerProvider} = require( '@opentelemetry/web');\nconst {BatchSpanProcessor} = require( '@opentelemetry/tracing');\nconst {XMLHttpRequestPlugin} = require( '@opentelemetry/plugin-xml-http-request');\nconst {ZoneScopeManager} = require( '@opentelemetry/scope-zone');\nconst opentelemetry = require('@opentelemetry/api');\n\nmodule.exports = (serviceName) => {\n    const collectorURL = 'http://34.69.66.237:80/v1/trace'; //collector currently doployed on GKE\n    const webTracer = new WebTracerProvider({\n    plugins: [\n        new DocumentLoad(),\n    ],\n    });\n    const collectorOptions = {\n    url: collectorURL,\n    };\n    const exporter = new CollectorExporter(collectorOptions);\n    webTracer.addSpanProcessor(new SimpleSpanProcessor(exporter));\n\n    const webTracerWithZone = new WebTracerProvider({\n        scopeManager: new ZoneScopeManager(),\n        plugins: [\n        new XMLHttpRequestPlugin({\n            ignoreUrls: ['/log', '/trace'],\n        }),\n        ],\n    });\n\n  webTracerWithZone.addSpanProcessor(new BatchSpanProcessor(exporter));\n  opentelemetry.trace.setGlobalTracerProvider(webTracerWithZone);\n    return opentelemetry.trace.getTracer('default');\n};\n\n"],"sourceRoot":""}